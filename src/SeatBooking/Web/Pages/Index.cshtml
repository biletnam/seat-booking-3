@page
@model IndexModel
@{
    ViewData["Title"] = "Seat booking";
}

@section scripts {

    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/angular.js/1.6.9/angular.js" integrity="sha256-ubLEQwr53FjvE/hMBvPTVinRBPUWl9FWKn2MW59CiM4=" crossorigin="anonymous"></script>
    <script type="text/javascript" src="~/lib/signalr/signalr.js"></script>
    <script type="text/javascript" src="~/js/app.js"></script>

    <link rel="stylesheet" type="text/css" href="~/lib/jquery-seat-charts/jquery.seat-charts.css">
    <link rel="stylesheet" type="text/css" href="~/lib/jquery-seat-charts/style.css">

    <script src="~/lib/jquery-seat-charts/jquery.seat-charts.js"></script>

    <script>
        var firstSeatLabel = 1;

        $(document).ready(function () {
            var $cart = $('#selected-seats'),
                $counter = $('#counter'),
                $total = $('#total'),
                sc = $('#seat-map').seatCharts({
                    map: [
                        'ff_ff',
                        'ff_ff',
                        'ee_ee',
                        'ee_ee',
                        'ee___',
                        'ee_ee',
                        'ee_ee',
                        'ee_ee',
                        'eeeee',
                    ],
                    seats: {
                        f: {
                            price: 100,
                            classes: 'first-class', //your custom CSS class
                            category: 'First Class'
                        },
                        e: {
                            price: 40,
                            classes: 'economy-class', //your custom CSS class
                            category: 'Economy Class'
                        }

                    },
                    naming: {
                        top: false,
                        getLabel: function (character, row, column) {
                            return firstSeatLabel++;
                        },
                    },
                    legend: {
                        node: $('#legend'),
                        items: [
                            ['f', 'available', 'First Class'],
                            ['e', 'available', 'Economy Class'],
                            ['f', 'unavailable', 'Already Booked']
                        ]
                    },
                    click: function () {
                        if (this.status() == 'available') {
                            //let's create a new <li> which we'll add to the cart items
                            $('<li>' + this.data().category + ' Seat # ' + this.settings.label + ': <b>$' + this.data().price + '</b> <a href="#" class="cancel-cart-item">[cancel]</a></li>')
                                .attr('id', 'cart-item-' + this.settings.id)
                                .data('seatId', this.settings.id)
                                .appendTo($cart);

                            /*
                             * Lets update the counter and total
                             *
                             * .find function will not find the current seat, because it will change its stauts only after return
                             * 'selected'. This is why we have to add 1 to the length and the current seat price to the total.
                             */
                            $counter.text(sc.find('selected').length + 1);
                            $total.text(recalculateTotal(sc) + this.data().price);

                            return 'selected';
                        } else if (this.status() == 'selected') {
                            //update the counter
                            $counter.text(sc.find('selected').length - 1);
                            //and total
                            $total.text(recalculateTotal(sc) - this.data().price);

                            //remove the item from our cart
                            $('#cart-item-' + this.settings.id).remove();

                            //seat has been vacated
                            return 'available';
                        } else if (this.status() == 'unavailable') {
                            //seat has been already booked
                            return 'unavailable';
                        } else {
                            return this.style();
                        }
                    }
                });

            //this will handle "[cancel]" link clicks
            $('#selected-seats').on('click', '.cancel-cart-item', function () {
                //let's just trigger Click event on the appropriate seat, so we don't have to repeat the logic here
                sc.get($(this).parents('li:first').data('seatId')).click();
            });

            //let's pretend some seats have already been booked
            sc.get(['1_2', '4_1', '7_1', '7_2']).status('unavailable');

        });

        function recalculateTotal(sc) {
            var total = 0;

            //basically find every selected seat and sum its price
            sc.find('selected').each(function () {
                total += this.data().price;
            });

            return total;
        }

    </script>
}

<div ng-controller="SeatController" class="wrapper">
    <div class="container">
        <h1>Welcome moviegoer!</h1>
        <div class="row" style="border:1px solid {{stringToColour(assignedAnimal)}}">
            <div class="col-sm-9 pull-right">
                <p>To book tickets you need to fight for them. Your spirit animal has been randomly selected as <strong>{{assignedAnimal}}</strong> and below you can see your competitors.</p>
            </div>
            <div class="col-sm-3 no-padding-left">
                <div style="background-color: {{ stringToColour(assignedAnimal) }}"><img class="img-responsive" ng-src="/images/animal-icons/{{ assignedAnimal }}.png" title="{{assignedAnimal}}" /></div>
            </div>
        </div>

        <h2>Competitors</h2>
        <div class="row" style="border:1px solid {{stringToColour(animal)}}" ng-repeat="animal in animals" ng-if="animal != assignedAnimal">
            <div class="col-sm-2 no-padding-left"  style="background-color: {{ stringToColour(animal) }}">
                <img class="img-responsive" ng-src="/images/animal-icons/{{animal}}.png" />
            </div>
            <div class="col-sm-10">{{ animal }}</div>
        </div>

        <div id="seat-map">
            <div class="front-indicator">Front</div>
        </div>
        <div class="booking-details">
            <h2>Booking Details</h2>

            <h3> Selected Seats (<span id="counter">0</span>):</h3>
            <ul id="selected-seats"></ul>

            Total: <b>$<span id="total">0</span></b>

            <button class="checkout-button">Checkout &raquo;</button>

            <div id="legend"></div>
        </div>
    </div>
</div>